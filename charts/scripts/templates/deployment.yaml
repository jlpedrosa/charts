apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scripts.fullname" . }}
  labels:
{{- include "scripts.labels" . | nindent 4 }}
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      {{- include "scripts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "scripts.selectorLabels" . | nindent 8 }}
        version: "{{ .Values.image.tag | default .Chart.AppVersion }}"
        {{- if .Values.podLabels }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
      {{- with .Values.podAnnotations }}
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
    spec:
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "scripts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command:
{{- if eq (typeOf .Values.command) "string" }}
{{- tpl .Values.command . | nindent 16 }}
{{- else }}
{{- toYaml .Values.command | nindent 16 }}
{{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "scripts.fullname" . }}-env
            - secretRef:
                name: {{ template "scripts.fullname" . }}-secret-env
          env:
            - name: APPLICATION_NAME
              value: "{{ template "scripts.fullname" . }}"
            - name: NAMESPACE_NAME
              value: "{{ .Release.Namespace }}"
          {{- if or .Values.configFiles .Values.secretFiles }}
          volumeMounts:
          {{- if .Values.configFiles }}
          {{- range $path, $config := .Values.configFiles }}
            - name: scripts-cm
              mountPath: /conf/{{ $path }}
              subPath: {{ $path }}
          {{- end -}}
          {{- end -}}
          {{- if .Values.secretFiles }}
          {{- range $path, $config := .Values.secretFiles }}
            - name: scripts-secret
              mountPath: /conf/{{ $path }}
              subPath: {{ $path }}
          {{- end -}}
          {{- end -}}
          {{- end -}}
          {{- with .Values.lifecycle }}
          lifecycle:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
{{- if .Values.initContainers }}
      initContainers:
        {{- if eq (typeOf .Values.initContainers) "string" }}
        {{- tpl .Values.initContainers . | nindent 8 }}
        {{- else }}
        {{- toYaml .Values.initContainers | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
        affinity:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.configFiles .Values.secretFiles }}
      volumes:
        {{- if .Values.configFiles }}
        - name: scripts-cm
          configMap:
            name: {{ template "scripts.fullname" . }}
        {{- end }}
        {{- if .Values.secretFiles }}
        - name: scripts-secret
          secret:
            secretName: {{ template "scripts.fullname" . }}
            defaultMode: 420
        {{- end }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
